#!/usr/bin/perl

use strict;
use warnings;

use File::Basename;
BEGIN {
    my $where = dirname(readlink $0 or $0);
    unshift @INC, "$where/../lib";
}

use Getopt::Std;
use Parse::RPM::Spec;
use Parse::CPAN::Packages;
use LWP::Simple;
use Cwd;
use Template;
use DateTime;
use Sys::Hostname;
use CPANRPM;

my %opts;
getopts('a', \%opts);

my $schema = CPANRPM->connect(
               "dbi:mysql:dbname=cpanrpm;host=$ENV{CPANRPM_HOST}",
               $ENV{CPANRPM_USER}, $ENV{CPANRPM_PASS},
             );

if ($opts{a}) {
  @ARGV = get_all_dists();
}

@ARGV || die "No distribution given\n";

my $build_root = '/home/dave/rpm';

chdir $build_root
  or die "Can't cd to $build_root\n";

if (-M '02packages.details.txt.gz' > 1) {
    warn "Getting package details...\n";
    getstore('http://cpan.org/modules/02packages.details.txt.gz',
	     '02packages.details.txt.gz');
}

warn "Parsing package details...\n";
my $cpan = Parse::CPAN::Packages->new('02packages.details.txt.gz');

my $tt = Template->new({
			INCLUDE_PATH => 'SPECS',
			OUTPUT_PATH  => 'SPECS',
		       });

foreach my $d (@ARGV) {
  handle_dist($d);
}

sub handle_dist {
  my $dist_name = shift;

  warn "Dist - $dist_name\n";

  my $cpan_dist = $cpan->latest_distribution($dist_name);

  my $dist_rs = $schema->resultset('Distribution')->search(
                  { distname => $dist_name }
                );

  my $dist = $dist_rs->first;

  unless ($dist) {
    warn "No distribution found in database: $dist_name\n";
    return;
  }

  my $builds = $dist->search_related( builds => { return_code => 0 } );

  if ($builds && $builds->count &&
      $builds->get_column('version')->max eq $cpan_dist->version) {
    warn "No rebuild required\n";
    return;
  }

  $tt->process(
               $dist->spec .'.tt',
               { version => $cpan_dist->version },
               $dist->spec,
              )
    or die $tt->error;

  unless (-f 'SOURCES/' . basename $cpan_dist->prefix) {
    warn 'Retriving http://www.cpan.org/authors/id/' .
         $cpan_dist->prefix . "\n";
    warn 'To ' . getcwd . '/SOURCES/' . basename $cpan_dist->prefix . "\n";
    getstore('http://www.cpan.org/authors/id/' . $cpan_dist->prefix,
             'SOURCES/' . basename $cpan_dist->prefix);
  }

  my $specfile = $dist->spec;
  my $build = $dist->create_related('builds',
				    {
				     build_env => hostname,
				     start     => DateTime->now,
				     version   => $cpan_dist->version,
				    });
  my $output = `rpmbuild -ba SPECS/$specfile 2>&1`;
  $build->return_code($?);
  $build->end(DateTime->now);
  $build->log($output);
  $build->update;

  warn "Build error\n" if $?;
}

sub get_all_dists {
  return map { $_->distname } $schema->resultset('Distribution')->
                                       search({ active => 1 })->all;  
}
